datasource db {
  provider          = "postgres"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING_SHADOW") // used for migrations
}

generator client {
  provider = "prisma-client-js"
}

// generator zod {
//   provider              = "zod-prisma"
//   output                = "zodSchemas"
//   prismaJsonNullability = false
// }

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // info
  telegramId Int     @unique
  firstName  String
  lastName   String?
  username   String?
  threadId   String? @unique

  // scheduling
  availability      String?
  scheduled         String?
  walkingWithUserId Int?
  Notes             Notes[]
}

model Notes {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId Int
  user   User   @relation(fields: [userId], references: [id])
  text   String
}
